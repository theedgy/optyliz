{"version":3,"sources":["logo.svg","scenes/Search/styles.ts","components/SearchForm/styles.ts","components/SearchForm/index.tsx","components/List/index.tsx","services/fetcher.ts","scenes/Search/index.tsx","styles.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Wrapper","styled","div","SearchFormWrapper","form","Label","label","Input","input","Submit","button","SearchForm","placeholder","List","fetcher","params","a","apiUrl","headers","queryParams","URLSearchParams","fetch","toString","response","ok","console","log","Error","json","Search","useState","results","setResults","useEffect","t","then","spin","keyframes","GlobalStyle","createGlobalStyle","AppContainer","Header","header","LogoWrapper","Logo","img","App","href","src","logo","className","alt","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oKAAe,MAA0B,iC,sBCE5BA,EAAUC,IAAOC,IAAV,6ECAPC,EAAoBF,IAAOG,KAAV,8EAKjBC,EAAQJ,IAAOK,MAAV,0BAELC,EAAQN,IAAOO,MAAV,0BAELC,EAASR,IAAOS,OAAV,0B,OCRNC,EAAa,WACtB,OACI,eAACR,EAAD,WACI,cAACE,EAAD,2BACA,cAACE,EAAD,CAAOK,YAAa,qBACpB,cAACH,EAAD,QCNCI,EAAO,WAChB,OAAO,wC,wBCHEC,EAAO,uCAAG,WAAOC,GAAP,qBAAAC,EAAA,4DAEH,0BACD,UAETC,EALa,UAEH,0BAFG,mBAGJ,WAITC,EAAU,CACZ,eAAgB,oBAGdC,EAAc,IAAIC,gBAAgBL,GAXrB,SAaIM,MAAM,GAAD,OAAIJ,EAAJ,YAAcE,EAAYG,YAAc,CAEhEJ,YAfe,WAabK,EAba,QAkBLC,GAlBK,uBAmBfC,QAAQC,IAAIH,GACN,IAAII,MAAJ,mCAAsCJ,IApB7B,yBAuBNA,EAASK,OAvBH,qFAAH,sDCMPC,EAAS,WAAO,IAAD,EACMC,qBADN,mBACjBC,EADiB,KACRC,EADQ,KAUxB,OAPAC,qBAAU,WACNnB,EAAQ,CACJoB,EAAG,SACJC,MAAK,SAACZ,GAAD,OAAcS,EAAWT,QAClC,IAEHE,QAAQC,IAAIK,GAER,eAAC/B,EAAD,WACI,cAAC,EAAD,IACA,cAAC,EAAD,QCjBNoC,EAAOC,YAAH,sIAUGC,EAAcC,YAAH,qGAQXC,EAAevC,IAAOC,IAAV,qFAKZuC,EAASxC,IAAOyC,OAAV,uLAQNC,EAAc1C,IAAOe,EAAV,kLASX4B,EAAO3C,IAAO4C,IAAV,iHAGAT,GCzBFU,MAff,WACI,OACI,eAACN,EAAD,WACI,cAACC,EAAD,UACI,eAACE,EAAD,CAAaI,KAAK,IAAlB,UACI,cAACH,EAAD,CAAMI,IAAKC,EAAMC,UAAU,WAAWC,IAAI,SAD9C,4BAMJ,cAAC,EAAD,QCCGC,EAdS,SAACC,GACjBA,GAAeA,aAAuBC,UACtC,6BAAqBnB,MACjB,YAAkD,IAA/CoB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC/BJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCJxBO,IAASC,OACL,eAAC,IAAMC,WAAP,WACI,cAACxB,EAAD,IACA,cAAC,EAAD,OAEJyB,SAASC,eAAe,SAM5BZ,M","file":"static/js/main.8c38fe1d.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n    display: flex;\n    flex-direction: column;\n`;\n","import styled from 'styled-components';\n\nexport const SearchFormWrapper = styled.form`\n    display: flex;\n    justify-content: center;\n`;\n\nexport const Label = styled.label``;\n\nexport const Input = styled.input``;\n\nexport const Submit = styled.button``;\n","import React from 'react';\nimport { Input, Label, SearchFormWrapper, Submit } from './styles';\n\nexport const SearchForm = () => {\n    return (\n        <SearchFormWrapper>\n            <Label>Search title</Label>\n            <Input placeholder={'eg. Pulp Fiction'} />\n            <Submit />\n        </SearchFormWrapper>\n    );\n};\n","import React from 'react';\n\nexport const List = () => {\n    return <div>List</div>;\n};\n","export const fetcher = async (params: { [key: string]: string }) => {\n    // Those values should go to .env file, but for just reacruitment app it's faster to handle deployments etc.\n    const urlBase = 'http://www.omdbapi.com/';\n    const apiKey = 'b508fc3';\n\n    const apiUrl = `${urlBase}?apikey=${apiKey}`;\n\n    const headers = {\n        'Content-Type': 'application/json',\n    };\n\n    const queryParams = new URLSearchParams(params);\n\n    const response = await fetch(`${apiUrl}&${queryParams.toString()}`, {\n        // mode: 'no-cors',\n        headers,\n    });\n\n    if (!response.ok) {\n        console.log(response)\n        throw new Error(`Response not successful: ${response}`);\n    }\n\n    return await response.json();\n};\n","import React, { useEffect, useState } from 'react';\nimport { Wrapper } from './styles';\nimport { SearchForm } from '../../components/SearchForm';\nimport { List } from '../../components/List';\nimport { fetcher } from '../../services/fetcher';\n\nexport const Search = () => {\n    const [results, setResults] = useState();\n\n    useEffect(() => {\n        fetcher({\n            t: 'pulp',\n        }).then((response) => setResults(response));\n    }, []);\n\n    console.log(results);\n    return (\n        <Wrapper>\n            <SearchForm />\n            <List />\n        </Wrapper>\n    );\n};\n","import styled, { createGlobalStyle, keyframes } from 'styled-components';\n\nconst spin = keyframes`\n    from {\n        transform: rotate(0deg);\n    }\n    to {\n        transform: rotate(360deg);\n    }\n`;\n\n// Add global styles\nexport const GlobalStyle = createGlobalStyle`\n body {\n   margin: 0;\n   padding: 0;\n   font-family: sans-serif;\n }\n`;\n\nexport const AppContainer = styled.div`\n    display: grid;\n    grid-auto-rows: 50px 100% 50px;\n`;\n\nexport const Header = styled.header`\n    display: flex;\n    justify-content: space-between;\n    align-items: baseline;\n    padding: 10px;\n    border-bottom: 1px solid rgba(0, 0, 0, 0.1);\n`;\n\nexport const LogoWrapper = styled.a`\n    display: flex;\n    align-items: center;\n    white-space: nowrap;\n    text-decoration: none;\n    color: currentColor;\n    font-weight: bold;\n`;\n\nexport const Logo = styled.img`\n    max-width: 100%;\n    max-height: 30px;\n    animation: ${spin} infinite 20s linear;\n`;\n","import React from 'react';\nimport logo from './logo.svg';\nimport { Search } from './scenes/Search';\nimport { AppContainer, Header, Logo, LogoWrapper } from './styles';\n\nfunction App() {\n    return (\n        <AppContainer>\n            <Header>\n                <LogoWrapper href=\"/\">\n                    <Logo src={logo} className=\"App-logo\" alt=\"logo\" />\n                    From Poland With Dev\n                </LogoWrapper>\n            </Header>\n\n            <Search />\n        </AppContainer>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import('web-vitals').then(\n            ({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n                getCLS(onPerfEntry);\n                getFID(onPerfEntry);\n                getFCP(onPerfEntry);\n                getLCP(onPerfEntry);\n                getTTFB(onPerfEntry);\n            }\n        );\n    }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { GlobalStyle } from './styles';\n\nReactDOM.render(\n    <React.StrictMode>\n        <GlobalStyle />\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}